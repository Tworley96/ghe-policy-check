# Copyright (c) 2022, Qualcomm Innovation Center, Inc. All rights reserved.
# SPDX-License-Identifier: BSD-3-Clause

# Generated by Django 3.1 on 2021-11-09 22:22
from typing import List

import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies: List[str] = []

    operations = [
        migrations.CreateModel(
            name="BasicOrg",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("org_name", models.CharField(max_length=255, unique=True)),
                ("github_id", models.IntegerField(unique=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BasicUser",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("username", models.CharField(max_length=255, unique=True)),
                ("github_id", models.IntegerField(unique=True)),
                ("email", models.EmailField(max_length=254, null=True, unique=True)),
                ("suspended_at", models.DateTimeField(null=True)),
                ("last_synced", models.DateTimeField(null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BasicTeam",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("github_id", models.IntegerField(unique=True)),
                ("team_name", models.CharField(max_length=255)),
                ("team_slug", models.CharField(max_length=255)),
                ("members", models.ManyToManyField(to="ghe_policy_check.BasicUser")),
                (
                    "org",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="teams",
                        to="ghe_policy_check.basicorg",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BasicRepo",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name="created"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                ("repo_name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("github_id", models.IntegerField(unique=True)),
                (
                    "classification",
                    models.TextField(
                        choices=[("class1", "Class1"), ("class2", "Class2")],
                        default=None,
                        null=True,
                    ),
                ),
                (
                    "classification_modified",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "visibility",
                    models.TextField(
                        choices=[
                            ("public", "Public"),
                            ("internal", "Internal"),
                            ("private", "Private"),
                        ],
                        default="private",
                    ),
                ),
                ("html_url", models.URLField(null=True, unique=True)),
                ("size", models.IntegerField(default=0)),
                ("disabled", models.BooleanField(default=False)),
                ("collaborators_synced", models.DateTimeField(null=True)),
                ("last_polling_check", models.DateTimeField(null=True)),
                ("collaborators", models.ManyToManyField(to="ghe_policy_check.BasicUser")),
                (
                    "fork_source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="forks",
                        to="ghe_policy_check.basicrepo",
                    ),
                ),
                (
                    "org",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repos",
                        to="ghe_policy_check.basicorg",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="repos",
                        to="ghe_policy_check.basicuser",
                    ),
                ),
                (
                    "teams",
                    models.ManyToManyField(
                        blank=True, related_name="repos", to="ghe_policy_check.BasicTeam"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="basicorg",
            name="members",
            field=models.ManyToManyField(to="ghe_policy_check.BasicUser"),
        ),
        migrations.AddField(
            model_name="basicorg",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="orgs",
                to="ghe_policy_check.basicuser",
            ),
        ),
    ]
